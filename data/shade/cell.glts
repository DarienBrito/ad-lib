#pragma type cello
#pragma include simple-vf

varying vec2 Vplanar;
#if defined FS
vec3 fragment () {
	float radius = length (Vplanar);
    float ambient = 0.3;
    float inner = ambient + (radius - Uradius_min) / (Uradius_max - Uradius_min);

    float dist = length (Vplanar - Ucutout_center);
    if (dist < Ucutout_radius) discard;

    float brightness = 0.3;
    float vortex = abs(Vplanar.x / Vplanar.y);
	return brightness * Ucolour * inner * (1 + vortex);
}
#elif defined VS
vec4 vertex () {
    vec4 position = Umvp * vec4 (Apos2d, 0.0, 1.0);

	Vplanar = Apos2d;
    return position;
}
#endif

