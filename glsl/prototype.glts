#pragma kinds VFG
#if defined VS
attribute vec3 Apos;
#endif

uniform ivec2 grid;
uniform mat4 Umvp;
varying float Vid;

#if defined VS
void main(void) {}
#elif defined GS
layout(points) in;
layout(triangle_strip, max_vertices = 3) out;

vec2 vertices [3] = {
	{ 1.0, 0.0 },
	{ 0.0, 1.0 },
	{ 0.0, 0.0 },
};

void main() {
	int N = gl_PrimitiveIDIn;
	int u = N % grid.x;
	int v = (N / grid.x) % grid.y;

	for(int i = 0; i < 3; i++) {
		vec2 offset = vec2 (u, v);
		gl_Position = Umvp * vec4 (offset + vertices [i], 0, 1);
		Vid = gl_PrimitiveIDIn;
		EmitVertex();
	}
	EndPrimitive();
}
#elif defined FS
void main(void) {
	gl_FragColor = vec4 (vec3 (1), 0.5);
}
#endif

