#pragma include simple-vf

#if defined VS
attribute vec2 Apos2d;
#endif

uniform float UR1;
uniform float UR2;
uniform float Uangle;

uniform mat4 Umvp;
uniform vec3 Ucolour;
varying vec2 Vplanar;

#if defined FS
vec3 fragment () {
	float radius = length (Vplanar);
    float ambient = 0.5;
    float inner = ambient + (radius - UR1) / (UR2 - UR1);

    float brightness = 1.0;
	return brightness * Ucolour * inner;
}
#elif defined VS
vec4 vertex () {
    float r = UR1 + Apos2d.r * (UR2 - UR1);
    float a = Apos2d.g * Uangle;
    vec2 cartesian = vec2 (r * cos(a), r * sin(a));
    vec4 position = Umvp * vec4 (cartesian, 0.0, 1.0);

	Vplanar = cartesian;
    return position;
}
#endif

